---
import type { UserRecord } from '../../../types/user';
import { UsersQuery } from '../../../lib/users';
import AppLayout from '../../layout/AppLayout.astro';
import { Alert, Button, Container, Heading, Link } from '@coffic/cosy-ui';
import EditUserForm from '../../../components/EditUserForm.astro';

export const prerender = false;

// 获取用户ID
const { id } = Astro.params;
const userId = parseInt(id || '0');

if (isNaN(userId)) {
    throw new Error('Invalid user ID');
}

// 创建查询实例
const usersQuery = new UsersQuery(Astro.locals);

// 获取用户信息
const user: UserRecord | null = await usersQuery.getUserById(userId);

if (!user) {
    throw new Error('User not found');
}

// 处理表单提交
let updateError: string | null = null;
let updateSuccess = false;

if (Astro.request.method === 'POST') {
    try {
        const formData = await Astro.request.formData();

        const username = formData.get('username') as string;
        const email = formData.get('email') as string;
        const firstName = (formData.get('first_name') as string) || null;
        const lastName = (formData.get('last_name') as string) || null;
        const avatarUrl = (formData.get('avatar_url') as string) || null;
        const role = (formData.get('role') as string) || 'user';
        const isActive = formData.get('is_active') === 'on';
        const password = (formData.get('password') as string) || undefined;

        // 准备更新数据
        const updateData: Partial<
            Omit<UserRecord, 'id' | 'created_at' | 'updated_at'>
        > = {
            username,
            email,
            first_name: firstName,
            last_name: lastName,
            avatar_url: avatarUrl,
            role,
            is_active: isActive === true,
        };

        // 只有当提供了新密码时才更新密码
        if (password && password.length > 0) {
            updateData.password = password;
        }

        const updatedUser = await usersQuery.updateUser(userId, updateData);

        if (updatedUser) {
            updateSuccess = true;
            updateError = null;
        } else {
            updateError = '更新用户失败';
        }
    } catch (error) {
        console.error('Update user error:', error);
        updateError = '更新用户时发生错误: ' + (error as Error).message;
    }
}
---

<AppLayout
    title={`编辑用户 - ${user.username}`}
    description={`编辑用户 ${user.username} 的信息`}>
    <Container width="xl" background="accent/10">
        <Heading level={1}>编辑用户</Heading>
        <EditUserForm 
          user={user} 
          updateSuccess={updateSuccess} 
          updateError={updateError} 
        />
    </Container>
</AppLayout>

<style>
    .edit-user-page {
        padding: 20px 0;
    }

    .form-container {
        background: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .edit-user-form {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 15px;
    }

    .form-group {
        display: flex;
        flex-direction: column;
    }

    .form-group label {
        margin-bottom: 5px;
        font-weight: 500;
    }

    .form-group input,
    .form-group select {
        padding: 8px 12px;
        border: 1px solid #d1d5db;
        border-radius: 4px;
        font-size: 14px;
    }

    .form-group.checkbox {
        flex-direction: row;
        align-items: center;
        gap: 8px;
    }

    .form-group.checkbox input {
        width: auto;
    }

    .form-actions {
        grid-column: span 2;
        display: flex;
        gap: 10px;
        justify-content: flex-end;
    }
</style>
